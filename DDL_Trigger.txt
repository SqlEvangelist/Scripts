-- Server-level audit log
CREATE TABLE DBA.dbo.ServerLoginAuditLog (
    EventType NVARCHAR(100),
    AffectedLogin NVARCHAR(128),
    InitiatorLogin NVARCHAR(128),
    CommandText NVARCHAR(MAX),
    HostName NVARCHAR(128),
    AppName NVARCHAR(128),
    EventDate DATETIME DEFAULT GETDATE()
);
-- Database-level audit log
CREATE TABLE DBA.dbo.DatabaseUserAuditLog (
    EventType NVARCHAR(100),
    DatabaseName NVARCHAR(128),
    AffectedUser NVARCHAR(128),
    InitiatorLogin NVARCHAR(128),
    CommandText NVARCHAR(MAX),
    HostName NVARCHAR(128),
    AppName NVARCHAR(128),
    EventDate DATETIME DEFAULT GETDATE()
);
-----Reports Database

CREATE TABLE DBA.dbo.AuditReportLog (
    AuditScope NVARCHAR(50),           -- 'Server' or 'Database'
    DatabaseName NVARCHAR(128),        -- NULL for server-level events
    EventType NVARCHAR(100),
    AffectedPrincipal NVARCHAR(128),   -- Login or User
    InitiatorLogin NVARCHAR(128),
    CommandText NVARCHAR(MAX),
    HostName NVARCHAR(128),
    AppName NVARCHAR(128),
    EventDate DATETIME DEFAULT GETDATE()
);

-----=====================create trigger==================-----
CREATE TRIGGER trg_ServerLoginAudit
ON ALL SERVER
FOR CREATE_LOGIN, ALTER_LOGIN, DROP_LOGIN
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        DECLARE @event XML = EVENTDATA();

        INSERT INTO DBA.dbo.ServerLoginAuditLog (
            EventType, AffectedLogin, InitiatorLogin, CommandText, HostName, AppName, EventDate
        )
        VALUES (
            @event.value('(/EVENT_INSTANCE/EventType)[1]', 'NVARCHAR(100)'),
            @event.value('(/EVENT_INSTANCE/ObjectName)[1]', 'NVARCHAR(128)'),
            SYSTEM_USER,
            @event.value('(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]', 'NVARCHAR(MAX)'),
            HOST_NAME(),
            APP_NAME(),
            GETDATE()
        );
    END TRY
    BEGIN CATCH
        PRINT 'Audit trigger error: ' + ERROR_MESSAGE();
    END CATCH
END;


---database trigger, iterates all database and creates trigger

DECLARE @sql NVARCHAR(MAX);
DECLARE @dbname NVARCHAR(128);

DECLARE db_cursor CURSOR FOR
SELECT name FROM sys.databases
WHERE database_id > 4 AND state_desc = 'ONLINE'; -- exclude system DBs

OPEN db_cursor;
FETCH NEXT FROM db_cursor INTO @dbname;

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @sql = '
    USE [' + @dbname + '];
    IF NOT EXISTS (
        SELECT 1 FROM sys.triggers 
        WHERE name = ''trg_DatabaseUserAudit'' AND parent_class = 0
    )
    BEGIN
        EXEC(''
        CREATE TRIGGER trg_DatabaseUserAudit
        ON DATABASE
        FOR CREATE_USER, ALTER_USER, DROP_USER
        AS
        BEGIN
            SET NOCOUNT ON;
            BEGIN TRY
                DECLARE @event XML = EVENTDATA();
                INSERT INTO DBA.dbo.DatabaseUserAuditLog (
                    EventType, DatabaseName, AffectedUser, InitiatorLogin, CommandText, HostName, AppName, EventDate
                )
                VALUES (
                    @event.value(''''(/EVENT_INSTANCE/EventType)[1]'''', ''''NVARCHAR(100)''''),
                    DB_NAME(),
                    @event.value(''''(/EVENT_INSTANCE/ObjectName)[1]'''', ''''NVARCHAR(128)''''),
                    SYSTEM_USER,
                    @event.value(''''(/EVENT_INSTANCE/TSQLCommand/CommandText)[1]'''', ''''NVARCHAR(MAX)''''),
                    HOST_NAME(),
                    APP_NAME(),
                    GETDATE()
                );
            END TRY
            BEGIN CATCH
                PRINT ''''Audit trigger error: '''' + ERROR_MESSAGE();
            END CATCH
        END
        '')
    END';

    EXEC(@sql);
    FETCH NEXT FROM db_cursor INTO @dbname;
END

CLOSE db_cursor;
DEALLOCATE db_cursor;

----------------------Agent Job


--------------------------Email---------------
--Job step1
-- Clear today's report entries
DELETE FROM DBA.dbo.AuditReportLog WHERE EventDate >= CAST(GETDATE() AS DATE);

-- Merge server-level audit
INSERT INTO DBA.dbo.AuditReportLog (
    AuditScope, DatabaseName, EventType, AffectedPrincipal, InitiatorLogin, CommandText, HostName, AppName, EventDate
)
SELECT 
    'Server', NULL, EventType, AffectedLogin, InitiatorLogin, CommandText, HostName, AppName, EventDate
FROM DBA.dbo.ServerLoginAuditLog
WHERE EventDate >= CAST(GETDATE() AS DATE);

-- Merge database-level audit
INSERT INTO DBA.dbo.AuditReportLog (
    AuditScope, DatabaseName, EventType, AffectedPrincipal, InitiatorLogin, CommandText, HostName, AppName, EventDate
)
SELECT 
    'Database', DatabaseName, EventType, AffectedUser, InitiatorLogin, CommandText, HostName, AppName, EventDate
FROM DBA.dbo.DatabaseUserAuditLog
WHERE EventDate >= CAST(GETDATE() AS DATE);


--Jobstep 2
DECLARE @html NVARCHAR(MAX) = N'
<html><body>
<h2>Daily SQL Audit Summary</h2>
<table border="1" cellpadding="4" cellspacing="0">
<tr>
<th>Scope</th><th>Database</th><th>EventType</th><th>Affected</th>
<th>Initiator</th><th>Host</th><th>App</th><th>Time</th>
</tr>';

SELECT @html += '
<tr>
<td>' + AuditScope + '</td>
<td>' + ISNULL(DatabaseName, '') + '</td>
<td>' + EventType + '</td>
<td>' + AffectedPrincipal + '</td>
<td>' + InitiatorLogin + '</td>
<td>' + HostName + '</td>
<td>' + AppName + '</td>
<td>' + CONVERT(NVARCHAR, EventDate, 120) + '</td>
</tr>'
FROM DBA.dbo.AuditReportLog
WHERE EventDate >= CAST(GETDATE() AS DATE);

SET @html += '</table></body></html>';

-- Store HTML in a temp table for next step
IF OBJECT_ID('tempdb..#AuditHtml') IS NOT NULL DROP TABLE #AuditHtml;
CREATE TABLE #AuditHtml (Body NVARCHAR(MAX));
INSERT INTO #AuditHtml VALUES (@html);

--step 3
DECLARE @html NVARCHAR(MAX);
SELECT @html = Body FROM #AuditHtml;

EXEC msdb.dbo.sp_send_dbmail
    @profile_name = 'DBA_Mail_Profile',
    @recipients = 'dbamail@megatech.com',
    @subject = 'Daily SQL Audit Report',
    @body = @html,
    @body_format = 'HTML';

